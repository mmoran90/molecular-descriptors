---
title: "Cleaning and Classifications"
author: "Madeline Chang"
date: "5/29/2024"
output: pdf_document
editor_options: 
  chunk_output_type: console
---

```{r, message = FALSE}
library(AppliedPredictiveModeling)
library(e1071)
library(caret)
library(rpart)
library(rpart.plot)
library(partykit)
library(earth)
library(kernlab)
library(mlbench)
library(randomForest)
library(dplyr)
library(corrplot)
library(pROC)
library(RANN)
library(glmnet)
```

```{r}
changer_data<- read.csv('/Users/mtc/ADS/ADS 503/Project/period+changer-2/data.csv', header = TRUE)
```

```{r}
degen<- nearZeroVar(changer_data)
changer_new<- changer_data[,-degen]

corr<- cor(changer_new[,1:1094])
high_corr <- findCorrelation(corr, cutoff = 0.75)
changer_new<- changer_new[,-high_corr]
```

```{r}
changer_new %>%
  group_by(Class) %>%
  summarise(n = n())
```

```{r}
set.seed(720)

trainingRows <- createDataPartition(changer_new$Class, p = .5, list = FALSE) 
train <- changer_new[trainingRows, ]
test <- changer_new[-trainingRows, ]

ctrl <- trainControl(method = "cv",
                     summaryFunction = twoClassSummary,
                     classProbs = TRUE,
                     savePredictions = TRUE)
```

```{r}
set.seed(720)

lrFit <- train(x = train[,1:216], 
               y = train$Class,
               method = "glm",
               preProc = c("center", "scale"),
               metric = "ROC",
               trControl = ctrl)
lrFit
lrFit$finalModel

lrCM <- confusionMatrix(lrFit, norm = "none")
lrCM

lrRoc <- roc(response = lrFit$pred$obs,
             predictor = lrFit$pred$Changer,
             levels = rev(levels(lrFit$pred$obs)))

plot(lrRoc, legacy.axes = TRUE)
lrRoc$auc

plot(lrImp)
```

```{r}
set.seed(720)
ldaFit <- train(x = train[,1:216], 
                y = train$Class,
                method = "lda",
                preProc = c("center", "scale"),
                metric = "ROC",
                trControl = ctrl)
ldaFit
ldaFit$finalModel

ldaCM <- confusionMatrix(ldaFit, norm = "none")
ldaCM

## Plot the ROC curve for the hold-out set
ldaRoc <- roc(response = ldaFit$pred$obs,
             predictor = ldaFit$pred$Changer,
             levels = rev(levels(ldaFit$pred$obs)))

plot(ldaRoc, legacy.axes = TRUE)

varImp(ldaFit)
```

```{r}
glmnGrid <- expand.grid(alpha = c(0,  .1,  .2, .4, .6, .8, 1),
                        lambda = seq(.01, .2, length = 10))
set.seed(720)
glmnFit <- train(x = train[,1:216], 
                 y = train$Class,
                 method = "glmnet",
                 tuneGrid = glmnGrid,
                 preProc = c("center", "scale"),
                 metric = "ROC",
                 trControl = ctrl)

glmnetCM <- confusionMatrix(glmnFit, norm = "none")
glmnetCM

glmRoc <- roc(response = glmnFit$pred$obs,
             predictor = glmnFit$pred$Changer,
             levels = rev(levels(glmnFit$pred$obs)))

plot(glmRoc, legacy.axes = TRUE)
```

